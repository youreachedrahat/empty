
```
<?xml version="1.0" encoding="UTF-8"?>
<opml version="1.0">
	<head>
		<dateCreated>Thu Dec 05 2024 19:02:06 GMT+0530 (India Standard Time)</dateCreated>
		<dateModified>Thu Dec 05 2024 19:02:06 GMT+0530 (India Standard Time)</dateModified>
	</head>
	<body>
		<outline text="Talendro">
			<outline text="IdentificationNFT">
				<outline text="Mint()">
					<outline text="mints 3 tokens based on orefParam 
1. cnf_identification_nft (config_nft)
2. adm_identification_nft (for admin user)
3. sys_identification_nft (for system)"></outline>
				</outline>
			</outline>
			<outline text="Arbitrator NFT">
				<outline text="Mint()">
					<outline text="input.value should have adm_identification_nft"></outline>
					<outline text="adm_identification_nft must go back to same address"></outline>
					<outline text="must mint token with arb_ as first 4 characters"></outline>
				</outline>
			</outline>
			<outline text="Talendro User NFT">
				<outline text="Mint()">
					<outline text="input.value should have sys_identification_nft"></outline>
					<outline text="adm_identification_nft must go back to same address"></outline>
					<outline text="must mint token with usr_ as first 4 characters"></outline>
				</outline>
			</outline>
			<outline text="Project Init">
				<outline text="project Initiate">
					<outline text="Mint()">
						<outline text="must have Talendro token"></outline>
						<outline text="must have correct datum"></outline>
						<outline text="must mint 2 tokens clt_ dev_ project_title"></outline>
						<outline text="dev_ token should go to script output"></outline>
						<outline text="if projectdatum.pay == ada should go in script output if its None then skip this part"></outline>
					</outline>
				</outline>
				<outline text="Project Accept">
					<outline text="Spend()">
						<outline text="must have Talendro token"></outline>
						<outline text="must send locked ada to milestoneContractif projectDatum.pay==None else to holdingContract  (input.ada == output.ada)"></outline>
						<outline text="same datum except ProjectDatum.developer to holdingContract"></outline>
						<outline text="ProjectDatum.Developer must be the signer"></outline>
					</outline>
				</outline>
			</outline>
			<outline text="Milestone Contract">
				<outline text="Milstone Create">
					<outline text="Spend()">
						<outline text="clt will mint milestone tokens"></outline>
						<outline text="output should go to HoldingContract"></outline>
						<outline text="must be minting some milestone token"></outline>
					</outline>
					<outline text="Mint()">
						<outline text="ProjectDatum should not change except milestone, current Milestone"></outline>
						<outline text="should mint 2 token for each milestone"></outline>
						<outline text="must have talendroToken"></outline>
						<outline text="dev_ token goes to ProjectDatum.developer"></outline>
						<outline text="output.projectDatum.current_milestone.pay == ada in script output"></outline>
						<outline text="must have input from own addres"></outline>
					</outline>
				</outline>
				<outline text="Milestone Complete">
					<outline text="Mint()">
						<outline text="must burn 1 pair of dev_ &amp; clt_ milestone"></outline>
						<outline text="output should go to HoldingContract with next milestone pay"></outline>
						<outline text="output.datum will have updated current milestone and milestone status =True"></outline>
						<outline text="HoldingContract output should have currentMilestone pay"></outline>
					</outline>
				</outline>
				<outline text="Project Cancel">
					<outline text="Mint()">
						<outline text="Burn all the milestone token received"></outline>
						<outline text="check datum.currentmilestone and developer is None and pay for incomplete milestone as 0"></outline>
					</outline>
				</outline>
				<outline text="Project Cancel Before minting">
					<outline text="developer">
						<outline text="spend()">
							<outline text="must send dev_project token"></outline>
							<outline text="update datum.developer = None"></outline>
						</outline>
					</outline>
					<outline text="client">
						<outline text="spend()">
							<outline text="must burn clt_ and dev_ project token"></outline>
							<outline text="check datum.developer is None"></outline>
						</outline>
					</outline>
				</outline>
			</outline>
			<outline text="Holding Contract (spend)">
				<outline text="Project Complete">
					<outline text="developer">
						<outline text="should send dev_ token
this marks it as complete in offchain"></outline>
						<outline text="datum must not change"></outline>
						<outline text="output should have ada == projectdatum.pay"></outline>
					</outline>
					<outline text="Client">
						<outline text="should burn clt_ and dev_"></outline>
						<outline text="projectdatum.pay == ada must be sent to projectdatum.developer "></outline>
					</outline>
				</outline>
				<outline text="milestone Complete">
					<outline text="developer">
						<outline text="should send dev_project_milestone token"></outline>
						<outline text="if projectdatum.milestone list,all status is true must also receive dev_project"></outline>
						<outline text="datum must not change"></outline>
						<outline text="output should have ada == projectdatum.milestone.pay"></outline>
					</outline>
					<outline text="client">
						<outline text="Should burn clt_mileestone &amp; dev_milestone"></outline>
						<outline text="if projectdatum.milestone list,all status is true must also burn clt_project and dev_project"></outline>
						<outline text="projectdatum.milestone.pay == ada should be sent to projectdatum.developer"></outline>
						<outline text="updating current milestone"></outline>
						<outline text="script output with ada == output.projectdatum.currentmilestone.pay"></outline>
					</outline>
				</outline>
				<outline text="cancel Project">
					<outline text="Milestone Based">
						<outline text="developer">
							<outline text="must send all the milestone + project token"></outline>
							<outline text="projectdatum -&gt; developer &amp; currentMilestone is set to None
pay for incomplete milestone=0"></outline>
						</outline>
						<outline text="client">
							<outline text="must burn all the milestone + project token for clt_ and dev_"></outline>
							<outline text="locked ada goes to client"></outline>
						</outline>
					</outline>
					<outline text="Regular project">
						<outline text="developer">
							<outline text="must send the dev_project token"></outline>
							<outline text="update projectdatum developer to None &amp; pay =0"></outline>
						</outline>
						<outline text="client ">
							<outline text="must burn clt_ dev_ project token"></outline>
							<outline text="locked ada goes to client"></outline>
						</outline>
					</outline>
				</outline>
				<outline text="Arbitration">
					<outline text="Regular Project">
						<outline text="By Developer">
							<outline text="must send dev_ token to ArbitrationContract"></outline>
							<outline text="must send ArbirationDatum with pow as an external link"></outline>
							<outline text="the ada for scriptinput and arbitrationOuput must be same"></outline>
						</outline>
						<outline text="By Client">
							<outline text="must send clt_ token to ArbitrationContract"></outline>
							<outline text="the ada for scriptinput and arbitrationOuput must be same"></outline>
						</outline>
					</outline>
					<outline text="Milestone Based">
						<outline text="By Developer">
							<outline text="must send all dev_ token to ArbitrationContract"></outline>
							<outline text="must send ArbirationDatum with pow as an external link"></outline>
							<outline text="the ada for scriptinput and arbitrationOuput must be same"></outline>
						</outline>
						<outline text="By Client">
							<outline text="must send all clt_ token to ArbitrationContract"></outline>
							<outline text="the ada for scriptinput and arbitrationOuput must be same"></outline>
						</outline>
					</outline>
				</outline>
			</outline>
			<outline text="Arbitration">
				<outline text=""></outline>
			</outline>
			<outline text="User Stake"></outline>
			<outline text="TYPES">
				<outline text="ArbitrationDatum"></outline>
				<outline text="ProjectDatum"></outline>
				<outline text="Milestone"></outline>
				<outline text="ConfigDatum"></outline>
			</outline>
			<outline text="Tokens">
				<outline text="projectInit">
					<outline text="clt_project_title"></outline>
					<outline text="dev_project_title"></outline>
				</outline>
				<outline text="milestone">
					<outline text="clt_project_title_milestoneIdentifier"></outline>
					<outline text="dev_project_title_milestoneIdentifier"></outline>
				</outline>
				<outline text="TalendroUser">
					<outline text="usr_TalendroUsername"></outline>
				</outline>
				<outline text="Arbitrator">
					<outline text="arb_TalendroUsername"></outline>
				</outline>
				<outline text="Identification">
					<outline text="cnf_identity (forUTXO)"></outline>
					<outline text="adm_identity (forAdminWallet)"></outline>
				</outline>
			</outline>
		</outline>
	</body>
</opml>

```
